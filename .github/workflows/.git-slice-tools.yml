# git-slice-tools workflow for syncing default branch
name: git-slice-tools

on:
  pull_request:
    types: [opened, synchronize]
  schedule:
    - cron: '0 0 * * *'
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      job:
        description: 'Job'
        type: choice
        options:
          - pull-default-branch
          - pull-a-branch
          - pull-an-issue
          - pickup-push
          - pickup-pull
        required: true
      branch:
        description:
          '[pull-a-branch] Name of branch. Please make sure that this and our slice default branch are up-to-date
          upstream main'
        default: ''
      targetBranch:
        description:
          '[pull-a-branch] Name of the branch in our repo which you want to raise a PR to merge the pulled upstream
          branch into (optional)'
        default: ''
      upstreamIssue:
        description: '[pull-an-issue] Upstream issue number or link to any issue which upstream account can access'
      sliceIssue:
        description: '[pull-an-issue] Slice issue number to update (optional)'
      operationId:
        description: '[pickup-push][pickup-pull] Push/Pull operation Id'

# Terms:
# - Upstream repo: client repo or forked repo in open source flow
# - Slice repo: internal (private) repo

env:
  # ---------- UPSTREAM ----------
  GIT_SLICE_UPSTREAM_REPO_DIR: ./upstream-repo
  # Http git url of upstream repo, should be in this format : https://github.com/sourcegraph/sourcegraph.git
  GIT_SLICE_UPSTREAM_REPO_URL: https://github.com/sourcegraph/about.git
  # Name of default branch of upstream repo
  GIT_SLICE_UPSTREAM_REPO_DEFAULT_BRANCH: main
  # Username for git authentication and commit details on upstream repo
  GIT_SLICE_UPSTREAM_REPO_USERNAME: gitstart-sourcegraph
  # User email for git authentication and commit details on upstream repo
  GIT_SLICE_UPSTREAM_REPO_EMAIL: sourcegraph@gitstart.com
  # Personal Access Token for git authentication on upstream repo
  GIT_SLICE_UPSTREAM_REPO_PASSWORD: ${{ secrets.GIT_SLICE_UPSTREAM_REPO_PASSWORD }}
  # ---------- SLICE ----------
  GIT_SLICE_SLICE_REPO_DIR: ./slice-repo
  # Http git url of slice repo, should be in this format : https://github.com/GitStartHQ/client-sourcegraph.git
  GIT_SLICE_SLICE_REPO_URL: ${{ github.repositoryUrl }}
  # Name of default branch of slice repo
  GIT_SLICE_SLICE_REPO_DEFAULT_BRANCH: main
  # Username for git authentication and commit details on slice repo
  GIT_SLICE_SLICE_REPO_USERNAME: gitstart
  # User email for git authentication and commit details on slice repo
  GIT_SLICE_SLICE_REPO_EMAIL: bot@gitstart.com
  # Personal Access Token for git authentication on slice repo
  GIT_SLICE_SLICE_REPO_PASSWORD: ${{ secrets.GIT_SLICE_SLICE_REPO_PASSWORD }}
  # ---------- OPTIONS ----------
  # Array of glob patterns which are used to ignore files when syncing changes between 2 repos. ex: `['.git-slice.json', 'dev/*']`
  GIT_SLICE_SLICE_IGNORES: '["GITSTART.md", "Dockerfile", ".dockerignore", "robots.txt", "preloadTweet.js"]'
  # (`true` or `false`) Use open source flow or not
  GIT_SLICE_OPEN_SOURCE_FLOW: false
  # Http git url of open source repo, should be in this format : https://github.com/cypress.io/cypress.git, please use empty string "" if it's not
  GIT_SLICE_OPEN_SOURCE_URL: ''
  # (`git-logs` or `pr-assignees` or `none`) Where to get co-authors for adding into commit messages
  GIT_SLICE_AUTO_CO_AUTHORS_COMMITS: none
  GIT_SLICE_GITSTART_GATEWAY_TOKEN: ${{ secrets.github_token }}
  GIT_SLICE_GITSTART_GATEWAY_URL: https://gateway.gitstart.com/graphql
  GIT_SLICE_PUSH_BRANCH_NAME_TEMPLATE: <branch_name>
  GIT_SLICE_PUSH_COMMIT_MSG_REGEX: .*
  GIT_SLICE_CHECKOUT_CACHED_KEY: ${{ secrets.GIT_SLICE_UPSTREAM_REPO_CACHE_KEY }}
  GIT_SLICE_PR_LABELS: '["gitstart"]'
  GIT_SLICE_PR_DRAFT: true
  # Use GitStart gateway (If your repo has `Branch protection rule`, please add `gitstart-app` into `Allow specified actors to bypass required pull requests`)
jobs:
  git-slice-pull:
    runs-on: ubuntu-latest
    concurrency:
      group: upstream-repo-pull-default-branch
      cancel-in-progress: false

    if:
      ${{ github.event_name != 'issue_comment' && (github.event_name != 'workflow_dispatch' || github.event.inputs.job ==
      'pull-default-branch' || github.event.inputs.job == 'pull-a-branch') }}

    steps:
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: git-slice-tools CHECKOUT
        id: checkout
        uses: GitStartHQ/git-slice-tools-private/actions/checkout@v2.7.1

      - name: git-slice-tools PULL
        uses: GitStartHQ/git-slice-tools-private/actions/pull@v2.7.1
        env:
          GIT_SLICE_TOOLS_IGNORE_SETUP: ${{ steps.checkout.outputs.fromCache != 'true' }}

      - name: Failure report Slack
        if: failure() || cancelled()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "git-slice-pull failed: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.GIT_SLICE_TOOLS_SLACK_WEBHOOK_URL }}

  git-slice-pull-branch:
    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'pull-a-branch' }}

    needs: [git-slice-pull]

    steps:
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: git-slice-tools PULL-BRANCH
        uses: GitStartHQ/git-slice-tools-private/actions/pull-branch@v2.7.1
        with:
          branch: ${{ github.event.inputs.branch }}
          target-branch: ${{ github.event.inputs.targetBranch }}

      - name: Failure report Slack
        if: failure() || cancelled()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "git-slice-pull-branch failed: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.GIT_SLICE_TOOLS_SLACK_WEBHOOK_URL }}

  # Trigger git-slice pull-review action with pull request comment: /git-slice pull-review -from https://github.com/sourcegraph/sourcegraph/pull/37919#pullrequestreview-1025518547
  # -from : Link to pull request review or comment (GitHub only)
  git-slice-pull-review-comment:
    runs-on: ubuntu-latest

    if:
      ${{ github.event_name == 'issue_comment' && github.event.issue.pull_request && startsWith(github.event.comment.body,
      '/git-slice pull-review ') }}

    steps:
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: git-slice-tools PULL-REVIEW-COMMENT (trigger by comments)
        uses: GitStartHQ/git-slice-tools-private/actions/pull-review-comment@v2.7.1

      - name: Failure report Slack
        if: failure() || cancelled()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "git-slice-pull-review-comment failed: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.GIT_SLICE_TOOLS_SLACK_WEBHOOK_URL }}

      - name: Failure report Comment reaction
        uses: actions/github-script@v6
        if: failure() || cancelled()
        with:
          result-encoding: string
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: '-1'
            });

  # Trigger git-slice push action with pull request comment: /git-slice push -m "<commit message>" [-f] [-pr]
  # -f : Override previous push (force push)
  # -pr : Create a PR with the same title and body on the client side
  git-slice-push-comment:
    runs-on: ubuntu-latest

    if:
      ${{ github.event_name == 'issue_comment' && github.event.issue.pull_request && startsWith(github.event.comment.body,
      '/git-slice push') }}

    steps:
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Check PR
        uses: GitStartHQ/git-slice-tools-private/actions/get-pr-details-for-issue-comment@v2.7.1
        id: push-details
        with:
          ignoredBranches: ${{ env.GIT_SLICE_SLICING_NON_DEFAULT_BRANCHES && env.GIT_SLICE_SLICING_NON_DEFAULT_BRANCHES || '[]' }}

      - name: git-slice-tools CHECKOUT
        if: ${{ steps.push-details.outputs.shouldContinue == 'true' }}
        id: checkout
        uses: GitStartHQ/git-slice-tools-private/actions/checkout@v2.7.1

      - name: git-slice-tools PULL
        if: ${{ steps.push-details.outputs.shouldContinue == 'true' }}
        uses: GitStartHQ/git-slice-tools-private/actions/pull@v2.7.1
        env:
          GIT_SLICE_TOOLS_IGNORE_SETUP: ${{ steps.checkout.outputs.fromCache != 'true' }}

      - name: git-slice-tools PUSH (trigger by comments)
        if: ${{ steps.push-details.outputs.shouldContinue == 'true' }}
        uses: GitStartHQ/git-slice-tools-private/actions/push-comment@v2.7.1
        env:
          GIT_SLICE_TOOLS_IGNORE_SETUP: true

      - name: Failure report Slack
        if: failure() || cancelled()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "git-slice-push-comment failed: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.GIT_SLICE_TOOLS_SLACK_WEBHOOK_URL }}

      - name: Failure report Comment reaction
        uses: actions/github-script@v6
        if: failure() || cancelled()
        with:
          result-encoding: string
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: '-1'
            });

  git-slice-pull-issue:
    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'pull-an-issue' }}

    steps:
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: git-slice-tools PULL-ISSUE
        uses: GitStartHQ/git-slice-tools-private/actions/pull-issue@v2.7.1
        with:
          upstream-issue: ${{ github.event.inputs.upstreamIssue }}
          slice-issue: ${{ github.event.inputs.sliceIssue }}
          trigger-by: ${{ github.actor }}

      - name: Failure report Slack
        if: failure() || cancelled()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "git-slice-pull-issue failed: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.GIT_SLICE_TOOLS_SLACK_WEBHOOK_URL }}

  git-slice-pickup-push:
    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'pickup-push' }}

    steps:
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: git-slice-tools PICKUP-PUSH
        uses: GitStartHQ/git-slice-tools-private/actions/pickup-push@v2.7.1
        with:
          operationId: ${{ github.event.inputs.operationId }}

      - name: Failure report Slack
        if: failure() || cancelled()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "git-slice-pickup-push failed: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.GIT_SLICE_TOOLS_SLACK_WEBHOOK_URL }}

  git-slice-pickup-pull:
    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'pickup-pull' }}

    steps:
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: git-slice-tools PICKUP-PULL
        uses: GitStartHQ/git-slice-tools-private/actions/pickup-pull@v2.7.1
        with:
          operationId: ${{ github.event.inputs.operationId }}

      - name: Failure report Slack
        if: failure() || cancelled()
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "git-slice-pickup-pull failed: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.GIT_SLICE_TOOLS_SLACK_WEBHOOK_URL }}
